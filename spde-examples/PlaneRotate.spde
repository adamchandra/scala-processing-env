/**
 * Rotate 1. 
 * 
 * Rotating simultaneously in the X and Y axis. 
 * Transformation functions such as rotate() are additive.
 * Successively calling rotate(1.0) and rotate(2.0)
 * is equivalent to calling rotate(3.0). 
 */
 
size(640, 360, P3D)
val rSize = width / 6 // rectangle size
noStroke()
fill(204, 204)

var a = 0.0
def draw() {
  background(0)
  
  a = (a + 0.005) % TWO_PI
  
  translate(width/2, height/2)
  
  rotateX(a)
  rotateY(a * 2.0)
  rect(-rSize, -rSize, rSize*2, rSize*2)
  
  rotateX(a * 1.001)
  rotateY(a * 2.002)
  rect(-rSize, -rSize, rSize*2, rSize*2)
}